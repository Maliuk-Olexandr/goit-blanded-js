"use strict";
// -------------------------------------------- Завдання 1: --------------------------------------------

// Створіть масив styles з елементами 'jazz' і 'blues'
// Додайте до кінця масиву елемент 'rock-n-roll' за допомогою відповідного методу масивів
// Знайдіть елемент 'blues' у масиві та замініть його на 'classic', використовуючи JavaScript-код

// Напишіть функцію logItems(array), яка приймає масив як аргумент
// і виводить у консоль кожен його елемент у форматі:
// "<номер елемента> - <значення елемента>".
// Використайте цикл for для перебору елементів масиву.
// Нумерація елементів повинна починатися з 1 (а не з 0).
// -------------------------------------------- виконання --------------------------------------------
// const styles = ['jazz', 'blues'];
// styles.push('rock-n-roll');
// const bluesIndex = styles.indexOf('blues');
// styles[bluesIndex] = 'classic';
// console.log(styles); // ['jazz', 'classic', 'rock-n-roll']

// function logItems(styles) {
//   let i=0;
//   while ( i < styles.length) {
//     console.log(`${i + 1} - ${styles[i]}`);
//     i++;
//   };
// }
// logItems(styles);

// --------------------------------------------Завдання 2: --------------------------------------------

// Напишіть функцію checkLogin(array), яка:
// Приймає масив логінів як аргумент.
// Запитує ім'я користувача через prompt.
// Перевіряє, чи є введене ім'я у переданому масиві.
// Якщо ім'я є в масиві – виводить повідомлення через alert: "Welcome, <name>!"
// Якщо ім'я відсутнє – виводить повідомлення: "User not found".

// -------------------------------------------- виконання --------------------------------------------

// const logins = ["Peter", "John", "Igor", "Sasha"];

// function checkLogin(array) {
//   const name = prompt("Enter your name: ");
//   if (array.includes(name)) {
//     alert(`Welcome, ${name}!`);
//   } else {
//     alert("User not found");
//   }
// }
// checkLogin(logins);

// -------------------------------------------- Завдання 3: --------------------------------------------

// Напишіть функцію caclculateAverage(),
// яка приймає довільну кількість
// аргументів і повертає їхнє середнє значення.
// Додайте перевірку, що аргументи - це числа.

// -------------------------------------------- виконання --------------------------------------------
// function caclculateAverage() {
//   let sum = 0;

//   if (arguments.length === 0) {
//     return 0;
//   } else for (const args of arguments) {
//     if (typeof args !== "number") {
//       return "Error: not a number";
//     }
//     sum += args;
//   }
//   return sum / arguments.length;
// }
// console.log(caclculateAverage(1, 2, 3, 4, 5)); // 3
// console.log(caclculateAverage(1, 2, "3", 4, 5)); // Error: not a number
// console.log(caclculateAverage()); // 0
// console.log(caclculateAverage(19, 29, 39, 49, 59, 69, 79, 89, 99)); // 59

// -------------------------------------------- Завдання 4: --------------------------------------------

// Напишіть функцію, яка сумуватиме сусідні числа
// і пушитиме їх в новий масив.

// const someArr = [22, 11, 34, 5, 12, 13, 14, 15];

// уточнення: складати необхідно перше число з другим, потім друге - з третім,
// третє - з четвертим і так до кінця.
// В результаті функція має повертати масив [33, 45, 39, 17, 25, 27, 29].

// -------------------------------------------- виконання --------------------------------------------

// const someArr = [22, 11, 34, 5, 12, 13, 14, 15];
// function sumAdjacentNumbers(arr) {
//   const result = [];
//   for (let i = 0; i < arr.length - 1; i++) {
//     result.push(arr[i] + arr[i + 1]);
//   }
//   return result;
// }
// console.log(sumAdjacentNumbers(someArr)); // [33, 45, 39, 17, 25, 27, 29]
// console.log(sumAdjacentNumbers([1, 2, 3, 4])); // [3, 5, 7]

// -------------------------------------------- Завдання 5: --------------------------------------------

// Напишіть функцію findSmallestNumber(numbers),
// яка шукає найменше число в масиві.
// Додайте перевірку, що функція отримує саме масив, і
// якщо функція отримує масив - поверніть з функції найменше число,
// в іншому випадку - поверніть 'Sory, it is not an array!'.

// -------------------------------------------- виконання --------------------------------------------

// const numbers = [2, 5, 35, 56, 12, 24, 7, 80, 3];

// function findSmallestNumber(numbers) {
//   if (!Array.isArray(numbers)) {
//     return "Sorry, it is not an array!";
//   }

//   if (numbers.length === 0) {
//     return "Error: array is empty";
//   }

//   for (const args of numbers) {
//     if (typeof args !== "number") {
//       return "Error: not a number";
//     }
//   }
//   return Math.min(...numbers);
// }
// console.log(findSmallestNumber(numbers)); // 2
// console.log(findSmallestNumber([1, 2, 3, 4])); // 1
// console.log(findSmallestNumber("not an array")); // Sorry, it is not an array!
// console.log(findSmallestNumber([1, 2, "a", 4])); // Error: not a number
// console.log(findSmallestNumber([1, 2, 3, 4, -5])); // -5
// console.log(findSmallestNumber([])); // Error: array is empty

// -------------------------------------------- Завдання 6: --------------------------------------------

// Напишіть функцію findLongestWord(string), яка
// приймає довільний рядок, що складається лише зі слів, розділених
// пробілами (параметр string), і повертатиме найдовше слово у реченні.

// Скористайтесь цим прикладом виклику функції для перевірки її роботи:
// console.log(findLongestWord("London is the capital of Great Britain")); // 'capital'

// -------------------------------------------- Завдання 7: --------------------------------------------

// Напишіть скрипт, який для об'єкту user, послідовно:
// 1 - додасть поле mood зі значенням 'happy',
// 2 - замінить hobby на 'skydiving',
// 3 - замінить значення premium на false,
// 4 - виведе зміст об'єкта user у форматі
// '<ключ>:<значення>' використовуя Object.keys() та for...of

// const user = {
//     name: "John",
//     age: 20,
//     hobby: "tenis",
//     premium: true,
//   };

// -------------------------------------------- виконання --------------------------------------------

// -------------------------------------------- Завдання 8: --------------------------------------------

// Є об'єкт, в якому зберігаються зарплати команди
// Напишіть код для додавання усіх зарплат та
// збережіть його результат в змінній sum.
// Якщо об'єкт salaries пустий, то результат має бути 0

// const salaries = {
//     Mango: 100,
//     Poly: 160,
//     Ajax: 1470,
//   };

// -------------------------------------------- Завдання 9: --------------------------------------------

// Створіть об'єкт calculator з наступними методами:
// read(a, b) - приймає два аргумента і зберігає їх як властивості об'єкта,
// sum() - повертає сумму збереженних значень (з перевіркою на наявність властивостей в об'єкті),
// mult() - перемножає збереженні значення і повертає результат (з перевіркою на наявність властивостей в об'єкті),
// винесіть перевірку на наявність властивостей в об'єкті в окремий метод exist().

// Якщо вказані властивості в обʼєкті відсутні (тобто метод exist повертає false),
// методи sum і mult мають повертати рядок 'No such propeties'

// -------------------------------------------- виконання --------------------------------------------

// -------------------------------------------- Завдання 10: --------------------------------------------

// Напишіть функцію calcTotalPrice(fruits, fruitName),
// яка приймає массив об'єктів (fruits) і рядок з назвою фрукта (fruitName).
// Функція рахує і повертає загальну вартість фрукта
// з таким ім'ям, ціною та кількістю з об'єкта.

// Зверніть увагу, що в масиві може бути кілька обʼєктів з однаковою
// назвою фрукта, це також треба урахувати.

// const fruits = [
//     { name: "Яблуко", price: 45, quantity: 7 },
//     { name: "Апельсин", price: 60, quantity: 4 },
//     { name: "Банан", price: 125, quantity: 8 },
//     { name: "Груша", price: 350, quantity: 2 },
//     { name: "Виноград", price: 440, quantity: 3 },
//     { name: "Банан", price: 125, quantity: 3 },
//   ];

// -------------------------------------------- виконання --------------------------------------------
